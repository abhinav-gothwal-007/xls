package test_module

file_number 0 "test_module.x"

proc __test_module__spawnee_0__3_next<>(__state: (), init={()}) {
  __state: () = state_read(state_element=__state, id=2)
  tuple.5: () = tuple(id=5)
  __token: token = literal(value=token, id=1)
  literal.3: bits[1] = literal(value=1, id=3)
  N: bits[32] = literal(value=3, id=4)
  next_value.6: () = next_value(param=__state, value=tuple.5, id=6)
}

proc __test_module__spawnee_0__4_next<>(__state: (), init={()}) {
  __state: () = state_read(state_element=__state, id=8)
  tuple.11: () = tuple(id=11)
  __token: token = literal(value=token, id=7)
  literal.9: bits[1] = literal(value=1, id=9)
  N: bits[32] = literal(value=4, id=10)
  next_value.12: () = next_value(param=__state, value=tuple.11, id=12)
}

top proc __test_module__main_0_next<>(__state: (), init={()}) {
  proc_instantiation __test_module__spawnee_0__3_next_inst(proc=__test_module__spawnee_0__3_next)
  proc_instantiation __test_module__spawnee_0__4_next_inst(proc=__test_module__spawnee_0__4_next)
  __state: () = state_read(state_element=__state, id=14)
  tuple.17: () = tuple(id=17)
  __token: token = literal(value=token, id=13)
  literal.15: bits[1] = literal(value=1, id=15)
  tuple.16: () = tuple(id=16)
  next_value.18: () = next_value(param=__state, value=tuple.17, id=18)
}
